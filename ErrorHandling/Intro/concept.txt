Why Use error handling?
--The Exception Handling in Java is one of the powerful mechanism to handle
 the runtime errors so that the normal flow of theapplication can be maintained. 

-- Important Point-------
-- It Handle Runtime errors.

--------------------------------------------------------------------
--What is Exception Handling?
Exception Handling is a mechanism to handle runtime errors such as 
ClassNotFoundException, IOException, SQLException, RemoteException, etc.
------------------------------------------------------------------
-- What is Checked vs Unchecked Exception?
Checked Exceptions in Java
These are the exceptions that are checked at compile time. 
If some code within a method throws a checked exception, 
then the method must either handle the exception or it must specify the 
exception using the throws keyword.
--------------------------------------------------------------------------
Unchecked Exceptions in Java
These are the exceptions that are not checked at compile time. 
In C++, all exceptions are unchecked, so it is not forced by the compilerâ€™s 
to either handle or specify the exception. It is up to the programmers to be 
civilized and specify or catch the exceptions.

==========================================================================

Exceptions that comes under Checked Exception:
1. IO Exception
2. SQL Exception
3. Interrupted Exception
4. Remote Exception
All of the above directly implements thorwable.

========================================================================

Exceptions that comes under Unchecked exception: 

RumtimeException: 
  1. Airthmetic Exception
  2. NullPointer Exception
  3. NumberFormat Exception
  4. IndexOutOfBound Exception.

========================================================================
Error: 
Error is irrecoverable. Some example of errors are OutOfMemoryError, 
VirtualMachineError, AssertionError etc.

